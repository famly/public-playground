name: "Continuous Deployment"

# Check out the documentation for more info:
# - https://help.github.com/en/articles/workflow-syntax-for-github-actions
# - https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#jobsjob_idoutputs
on:
  # Trigger the deployment on a specific time.
  # schedule:
  #   # Every Mon-Thu at 10:00 and 14:00.
  #   - cron:  '0 0 10,14 ? * MON,TUE,WED,THU *'
  #   # Every Fri at 10:00.
  #   - cron:  '0 0 10 ? * FRI *'
  workflow_dispatch:
    inputs:
      commit:
        description: 'Which commit of Nuclearfamly to use'
        required: false
        default: 'latest'
      wait-for-images:
        description: 'Wait for images to be built from currently running CI jobs'
        required: false
        default: 'false'
        type: boolean
      # TODO: Make it work so it skips jobs that other jobs are dependant on.
      target:
        description: 'Target environment to deploy'
        default: All
        required: false
        type: choice
        options:
        - All
        - tryfamly_co
        - famly_de
        - famly_other
        - famly_co


# Make only a single job matching this group runs at any given time. Newer workflows
# are automatically queued.
# C.f. https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency
concurrency: deployment

jobs:
  preflight-check:
    runs-on: ubuntu-20.04
    name: "Preflight Check"
    steps:
      - uses: actions/checkout@v3
      - name: Check that images from the commit has finished building
        if: ${{ inputs.wait-for-images == 'true' || inputs.wait-for-images }}
        timeout-minutes: 10
        run: |
          echo "Check that image is finished building for commit ${{ inputs.commit }}"
          # for run in {1..40}; do docker manifest inspect famly/famlyapi:${{ inputs.commit }} && break || sleep 15; done

      - name: Figure out which things changed so we know what we are deploying
        run:
          echo "Basing deployment on commit ${{ inputs.commit }}."
          echo "Run something to list PRs."

      - name: Ping Slack about incoming Deployment Review
        run: echo "Pinging slack..."

  confirm-to-proceed-deployment:
    runs-on: ubuntu-20.04
    name: "Deployment Review"
    needs: preflight-check
    timeout-minutes: 1 # We set a timeout simply to avoid accidentally wasting too many CI minutes.
    environment:
      # A manual confirmation is enforced using environment protection rules,
      # configured in: https://github.com/famly/public-playground/settings/environments
      name: preflight check
    steps:
      - name: Ping Slack about deployments started
        run: echo "The following PRs will be deployed..."

  ################# We start first part of canary deployment to tryfamly_co #################
  deploy-tryfamly-co:
    runs-on: ubuntu-20.04
    name: "Deploy: tryfamly_co"
    needs: confirm-to-proceed-deployment
    environment:
      name: staging aws
    steps:
      - name: Ping Slack that tryfamly_co deployment is in-progress
        run: echo "Pinging Slack..."
      - name: Deploy to tryfamly_co
        run: echo "Deploying..."
      - name: Ping Slack that tryfamly_co is done deploying
        run: echo "Pinging Slack..."

  check-rollout-tryfamly-co:
    runs-on: ubuntu-20.04
    name: "Check rollout: tryfamly_co"
    needs: deploy-tryfamly-co
    steps:
      - name: Checking that tryfamly_co is stable
        run: echo "Checking..."

  ################# We start second part of canary deployment to famly_de + famly_other #################
  deploy-famly-de:
    runs-on: ubuntu-20.04
    name: "Deploy: famly_de"
    needs: check-rollout-tryfamly-co
    environment:
      name: production azure
    steps:
      - name: Ping Slack that famly_de deployment is in-progress
        run: echo "Pinging Slack..."
      - name: Deploy to famly_de
        run: echo "Deploying..."
      - name: Ping Slack that famly_de is done deploying
        run: echo "Pinging Slack..."

  deploy-famly-other:
    runs-on: ubuntu-20.04
    name: "Deploy: famly_other"
    needs: check-rollout-tryfamly-co
    environment:
      name: production other
    steps:
      - name: Ping Slack that famly_other deployment is in-progress
        run: echo "Pinging Slack..."
      - name: Deploy to famly_other
        run: echo "Deploying..."
      - name: Ping Slack that famly_other is done deploying
        run: echo "Pinging Slack..."

  check-rollout-famly-de:
    runs-on: ubuntu-20.04
    name: "Check rollout: famly_de"
    needs: deploy-famly-de
    steps:
      - name: Checking that famly_de is stable
        run: echo "Checking..."

  check-rollout-famly-other:
    runs-on: ubuntu-20.04
    name: "Check rollout: famly_other"
    needs: deploy-famly-other
    steps:
      - name: Checking that famly_other is stable
        run: echo "Checking..."

  ################# In the final stage we deploy to famly_co #################
  deploy-famly-co:
    runs-on: ubuntu-20.04
    name: "Deploy: famly_co"
    needs: [check-rollout-famly-de, check-rollout-famly-other]
    environment:
      name: production aws
    steps:
      - name: Ping Slack that famly_co deployment is in-progress
        run: echo "Pinging Slack..."
      - name: Deploy to famly_co
        run: echo "Deploying..."
      - name: Ping Slack that famly_co is done deploying
        run: echo "Pinging Slack..."

  check-rollout-famly-co:
    runs-on: ubuntu-20.04
    name: "Check rollout: famly_co"
    needs: [deploy-famly-co]
    steps:
      - name: Checking that tryfamly_co is stable
        run: echo "Checking..."
